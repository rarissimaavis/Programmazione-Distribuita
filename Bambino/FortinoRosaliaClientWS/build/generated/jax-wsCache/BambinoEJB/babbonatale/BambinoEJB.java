
package babbonatale;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.5
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BambinoEJB", targetNamespace = "http://babbonatale/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BambinoEJB {


    /**
     * 
     * @return
     *     returns java.util.List<babbonatale.Bambino>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://babbonatale/", className = "babbonatale.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.FindAllResponse")
    @Action(input = "http://babbonatale/BambinoEJB/findAllRequest", output = "http://babbonatale/BambinoEJB/findAllResponse")
    public List<Bambino> findAll();

    /**
     * 
     * @param arg0
     * @return
     *     returns babbonatale.Bambino
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findById", targetNamespace = "http://babbonatale/", className = "babbonatale.FindById")
    @ResponseWrapper(localName = "findByIdResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.FindByIdResponse")
    @Action(input = "http://babbonatale/BambinoEJB/findByIdRequest", output = "http://babbonatale/BambinoEJB/findByIdResponse")
    public Bambino findById(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns babbonatale.Bambino
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateBambino", targetNamespace = "http://babbonatale/", className = "babbonatale.UpdateBambino")
    @ResponseWrapper(localName = "updateBambinoResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.UpdateBambinoResponse")
    @Action(input = "http://babbonatale/BambinoEJB/updateBambinoRequest", output = "http://babbonatale/BambinoEJB/updateBambinoResponse")
    public Bambino updateBambino(
        @WebParam(name = "arg0", targetNamespace = "")
        Bambino arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteBambino", targetNamespace = "http://babbonatale/", className = "babbonatale.DeleteBambino")
    @ResponseWrapper(localName = "deleteBambinoResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.DeleteBambinoResponse")
    @Action(input = "http://babbonatale/BambinoEJB/deleteBambinoRequest", output = "http://babbonatale/BambinoEJB/deleteBambinoResponse")
    public void deleteBambino(
        @WebParam(name = "arg0", targetNamespace = "")
        Bambino arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns babbonatale.Bambino
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createBambino", targetNamespace = "http://babbonatale/", className = "babbonatale.CreateBambino")
    @ResponseWrapper(localName = "createBambinoResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.CreateBambinoResponse")
    @Action(input = "http://babbonatale/BambinoEJB/createBambinoRequest", output = "http://babbonatale/BambinoEJB/createBambinoResponse")
    public Bambino createBambino(
        @WebParam(name = "arg0", targetNamespace = "")
        Bambino arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<babbonatale.Bambino>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByEta", targetNamespace = "http://babbonatale/", className = "babbonatale.FindByEta")
    @ResponseWrapper(localName = "findByEtaResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.FindByEtaResponse")
    @Action(input = "http://babbonatale/BambinoEJB/findByEtaRequest", output = "http://babbonatale/BambinoEJB/findByEtaResponse")
    public List<Bambino> findByEta(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<babbonatale.Bambino>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByStato", targetNamespace = "http://babbonatale/", className = "babbonatale.FindByStato")
    @ResponseWrapper(localName = "findByStatoResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.FindByStatoResponse")
    @Action(input = "http://babbonatale/BambinoEJB/findByStatoRequest", output = "http://babbonatale/BambinoEJB/findByStatoResponse")
    public List<Bambino> findByStato(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.util.List<babbonatale.Bambino>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findByNumFamiliari", targetNamespace = "http://babbonatale/", className = "babbonatale.FindByNumFamiliari")
    @ResponseWrapper(localName = "findByNumFamiliariResponse", targetNamespace = "http://babbonatale/", className = "babbonatale.FindByNumFamiliariResponse")
    @Action(input = "http://babbonatale/BambinoEJB/findByNumFamiliariRequest", output = "http://babbonatale/BambinoEJB/findByNumFamiliariResponse")
    public List<Bambino> findByNumFamiliari(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0);

}
